apiVersion: v1
kind: Pod
metadata:
  annotations:
    checksum/scripts: 2250fe598bd32823abe18caaf790ca0d431367f781620019a27786289b16a772
  creationTimestamp: "2023-08-10T17:57:16Z"
  generateName: kafka-
  labels:
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: kafka
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    controller-revision-hash: kafka-7867c76cbf
    helm.sh/chart: kafka-22.0.1
    statefulset.kubernetes.io/pod-name: kafka-0
  name: kafka-0
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: kafka
    uid: 7dde76a2-dcf8-4823-a46f-17b0dc145722
  resourceVersion: "2578"
  uid: 8d9241b2-674f-4a8a-88f7-6cd1fdb3897f
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: kafka
              app.kubernetes.io/instance: kafka
              app.kubernetes.io/name: kafka
          topologyKey: kubernetes.io/hostname
        weight: 1
  containers:
  - command:
    - /scripts/setup.sh
    env:
    - name: BITNAMI_DEBUG
      value: "false"
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: KAFKA_CFG_ZOOKEEPER_CONNECT
    - name: KAFKA_INTER_BROKER_LISTENER_NAME
      value: INTERNAL
    - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
      value: INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
    - name: KAFKA_CFG_LISTENERS
      value: INTERNAL://:9094,CLIENT://:9092,CONTROLLER://:9093,EXTERNAL://:9095
    - name: HOST_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.hostIP
    - name: ALLOW_PLAINTEXT_LISTENER
      value: "yes"
    - name: KAFKA_ZOOKEEPER_PROTOCOL
      value: PLAINTEXT
    - name: KAFKA_VOLUME_DIR
      value: /bitnami/kafka
    - name: KAFKA_LOG_DIR
      value: /opt/bitnami/kafka/logs
    - name: KAFKA_CFG_DELETE_TOPIC_ENABLE
      value: "false"
    - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
      value: "true"
    - name: KAFKA_HEAP_OPTS
      value: -Xmx1024m -Xms1024m
    - name: KAFKA_CFG_LOG_FLUSH_INTERVAL_MESSAGES
      value: "10000"
    - name: KAFKA_CFG_LOG_FLUSH_INTERVAL_MS
      value: "1000"
    - name: KAFKA_CFG_LOG_RETENTION_BYTES
      value: "1073741824"
    - name: KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS
      value: "300000"
    - name: KAFKA_CFG_LOG_RETENTION_HOURS
      value: "168"
    - name: KAFKA_CFG_MESSAGE_MAX_BYTES
      value: "1000012"
    - name: KAFKA_CFG_LOG_SEGMENT_BYTES
      value: "1073741824"
    - name: KAFKA_CFG_LOG_DIRS
      value: /bitnami/kafka/data
    - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
      value: "1"
    - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
      value: "1"
    - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
      value: "1"
    - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
      value: "1"
    - name: KAFKA_CFG_NUM_IO_THREADS
      value: "8"
    - name: KAFKA_CFG_NUM_NETWORK_THREADS
      value: "3"
    - name: KAFKA_CFG_NUM_PARTITIONS
      value: "1"
    - name: KAFKA_CFG_NUM_RECOVERY_THREADS_PER_DATA_DIR
      value: "1"
    - name: KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES
      value: "102400"
    - name: KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES
      value: "104857600"
    - name: KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES
      value: "102400"
    - name: KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS
      value: "6000"
    - name: KAFKA_CFG_AUTHORIZER_CLASS_NAME
    - name: KAFKA_CFG_ALLOW_EVERYONE_IF_NO_ACL_FOUND
      value: "true"
    - name: KAFKA_CFG_SUPER_USERS
      value: User:admin
    - name: KAFKA_KRAFT_CLUSTER_ID
      value: kafka_cluster_id_test1
    - name: KAFKA_CFG_PROCESS_ROLES
      value: broker,controller
    - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
      value: CONTROLLER
    - name: KAFKA_ENABLE_KRAFT
      value: "true"
    image: docker.io/bitnami/kafka:3.4.0-debian-11-r22
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      tcpSocket:
        port: kafka-client
      timeoutSeconds: 5
    name: kafka
    ports:
    - containerPort: 9092
      name: kafka-client
      protocol: TCP
    - containerPort: 9094
      name: kafka-internal
      protocol: TCP
    - containerPort: 9095
      name: kafka-external
      protocol: TCP
    - containerPort: 9093
      name: kafka-ctlr
      protocol: TCP
    readinessProbe:
      failureThreshold: 6
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      tcpSocket:
        port: kafka-client
      timeoutSeconds: 5
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      runAsUser: 1001
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /bitnami/kafka
      name: data
    - mountPath: /opt/bitnami/kafka/logs
      name: logs
    - mountPath: /scripts/setup.sh
      name: scripts
      subPath: setup.sh
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-n6smd
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: kafka-0
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1001
  serviceAccount: kafka
  serviceAccountName: kafka
  subdomain: kafka-headless
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: data-kafka-0
  - configMap:
      defaultMode: 493
      name: kafka-scripts
    name: scripts
  - emptyDir: {}
    name: logs
  - name: kube-api-access-n6smd
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-08-10T17:57:16Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-08-10T17:57:26Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-08-10T17:57:26Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-08-10T17:57:16Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://057f1f604a6839f17a2e52e27cc985e173834a88b6fe9e46c3cd7994bb411399
    image: bitnami/kafka:3.4.0-debian-11-r22
    imageID: docker-pullable://bitnami/kafka@sha256:b33e9ac3ac30066a0a8291b84ee1672a8db5ea153993463a304e9e8d3108bf8f
    lastState: {}
    name: kafka
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-08-10T17:57:17Z"
  hostIP: 192.168.49.2
  phase: Running
  podIP: 10.244.0.7
  podIPs:
  - ip: 10.244.0.7
  qosClass: BestEffort
  startTime: "2023-08-10T17:57:16Z"
